#!/usr/bin/env bash
if [ $# -ne 2 ]; then
  echo "Usage: $0 <input_file> <output_file>"
  exit 1
fi

input_file="$1"
output_file="$2"

# Get the size of the input file
size=$(stat -c %s "$input_file")

# Function to display progress
progress_bar() {
  local current=$1
  local total=$2
  local width=50
  local percent=$((current * 100 / total))
  local complete=$((width * current / total))
  local incomplete=$((width - complete))
  
  printf "\r["
  printf "%0.s=" $(seq 1 $complete)
  printf "%0.s " $(seq 1 $incomplete)
  printf "] %d%%" $percent
}

# Use dd to read from the input file, use pv to show progress, 
# and then write to the output file with another dd command
dd if="$input_file" bs=4M status=none | pv -s $size | dd of="$output_file" bs=4M status=none

# Here we manually simulate progress by reading the output file size
while true; do
    copied_size=$(stat -c %s "$output_file")
    if [ $copied_size -ge $size ]; then
        break
    fi
    progress_bar $copied_size $size
    sleep 0.1
done

echo -e "\nCopy completed."
